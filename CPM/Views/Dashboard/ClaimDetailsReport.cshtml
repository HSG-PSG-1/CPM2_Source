@model List<CPM.DAL.vw_ClaimWithItemDetail>
@using Webdiyer.WebControls.Mvc
@using CPM.Services
@using CPM.Helper
@using System.Collections
@{ ViewBag.Title = "Dashboard Report"; Layout = Defaults.masterLayout;}
@{ CPM.DAL.vw_ClaimWithItemDetail dSearch = ((CPM.DAL.vw_ClaimWithItemDetail)(ViewData["SearchData"]));
   Dictionary<string, object> txtAttr = new Dictionary<string, object>();
   txtAttr.Add("class", "hdrTxt textBox");
   string brandLookup = !_Session.IsOnlyVendor ? LookupService.Source.Brand.ToString() :
   LookupService.Source.BrandVendor.ToString() + "&extras=" + _SessionUsr.OrgID.ToString();
}
<form action="@Url.Content("~/Dashboard/ClaimDetailsReportExcel")" method="post" id="frmExcel" style="display:none" >
    <input type="submit" value="Export to Excel" class="button" id="btnExcel" onclick1="return excelPostback(event);" />
</form>
<table width="100%">
    <tr>
        <td>
            <b class="smallHeading">Dashboard Report</b>
        </td>
        <td class="sqz" align="right">@*Quick search: <input type="text" class="textBox" data-bind = "value:quickSearch" title="all filters except Date and won't apply for Excel export" /> *@
        </td>
        <td class="sqz" align="right">&nbsp;
        </td>
    </tr>
    <tr>
        <td colspan="3">
            <!-- START: Search Panel -->
            <form action="@Url.Content("~/Dashboard/ClaimDetailsReport")" method="post" id="frm" style="display:inline">
                <fieldset>
                    <legend onclick="showHideDiv('tblSearch')" style="cursor: pointer">&nbsp;<img id="tblSearchImg" src="@Url.Content("~/Content/Images/aroB.gif")" alt="Show/Hide panel" />
                        &nbsp;Search&nbsp;</legend>
                    <table id="tblSearch" width="100%" cellpadding="5" cellspacing="5">
                        <tr>
                            <td nowrap="nowrap" width="5%">Claim #
                            </td>
                            <td>
                                @Html.TextBox("ClaimNos", dSearch.ClaimNos, new
                           {
                               title1 = "Enter single or comma separated multiple values",
                               data_bind = "value:search.ClaimNos",
                               @autofocus = "autofocus"
                           })
                            </td>
                            <td nowrap="nowrap" width="5%">Status
                            </td>
                            <td>
                                @Html.DropDownList("StatusID", new SelectList((IEnumerable)ViewData["Status"], "id", "value", dSearch.StatusID), " ", new { @class = "dropDown" })
                            </td>
                            <td nowrap="nowrap" width="5%">Assigned To
                            </td>
                            <td valign="bottom" nowrap="nowrap">
                                @Html.TextBox("AssignToName", dSearch.AssignToName, new { @style = "width:200px", data_bind = "value:search.AssignToName" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "AssignToName"))@Html.Hidden("AssignedTo", dSearch.AssignedTo)
                            </td>
                        </tr>
                        <tr>
                            <td nowrap="nowrap">Customer Ref #
                            </td>
                            <td>
                                @Html.TextBox("CustRefNo", dSearch.CustRefNo, new
                           {
                               @class = "hdrTxt textBox",
                               data_bind = "value:search.CustRefNo"
                           }) @* txtAttr)*@
                            </td>
                            <td nowrap="nowrap">Brand
                            </td>
                            <td valign="top" nowrap="nowrap">
                                @Html.TextBox("Brand", dSearch.Brand)&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "Brand"))@Html.Hidden("BrandID", dSearch.BrandID)
                            </td>
                            <td nowrap="nowrap">Customer
                            </td>
                            <td valign="middle" nowrap="nowrap">
                                @Html.TextBox("CustOrg", dSearch.CustOrgName, new { @style = "width:200px", data_bind = "value:search.CustOrgName" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "CustOrg"))@Html.Hidden("CustID", dSearch.CustID)
                            </td>
                        </tr>
                        <tr>
                            <td nowrap="nowrap">Claim Date From
                            </td>
                            <td>
                                @Html.TextBox("ClaimDateFrom1", dSearch.ClaimDateFrom.HasValue ? dSearch.ClaimDateFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                                @Html.Hidden("ClaimDateFrom", dSearch.ClaimDateFrom.HasValue ? dSearch.ClaimDateFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ClaimDateFrom" })
                            </td>
                            <td nowrap="nowrap">Claim Date To
                            </td>
                            <td>
                                @Html.TextBox("ClaimDateTo1", dSearch.ClaimDateTo.HasValue ? dSearch.ClaimDateTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                                @Html.Hidden("ClaimDateTo", dSearch.ClaimDateTo.HasValue ? dSearch.ClaimDateTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ClaimDateTo" })
                            </td>
                            @if (!_Session.IsOnlyCustomer && !_Session.IsOnlySales)
                            { 
                                <td nowrap="nowrap">Salesperson
                                </td>
                                <td valign="top" nowrap="nowrap">
                                    @Html.TextBox("Salesperson", dSearch.Salesperson, new { @style = "width:200px" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "Salesperson"))@Html.Hidden("SalespersonID", dSearch.SalespersonID)
                                </td>
                            }
                            else
                            {
                                <td colspan="2"></td>   
                            }
                        </tr>
                        <tr>
                            <td colspan="6"><b><i>Item Details:</i></b></td>
                        </tr>
                        <tr>
                            <td>Serial</td>
                            <td>@Html.TextBox("Serial", dSearch.Serial, new { @style = "width:200px" }) </td>
                            <td>DOT</td>
                            <td>@Html.TextBox("DOT", dSearch.DOT, new { @style = "width:200px" })
                            </td>
                            <td>Item Code</td>
                            <td>@Html.TextBox("ItemNo", dSearch.ItemNo, new { @style = "width:200px" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "ItemNo"))@Html.Hidden("ItemID", dSearch.ItemID)
                            </td>
                        </tr>
                        <tr>
                            <td colspan="6" align="right">
                            <input type="submit" value="Search" class="button" id="btnsearch" />
                                <input type="submit" value="Reset" class="button" onclick="resetForm(this);" />
                                <input type="checkbox" name="doReset" id="doReset" style="display: none;" />
                                @if (true || Model.Count > 0)
                                {//Kept for ref 
                                    <input type="button" value="Export to Excel" class="button" onclick="document.getElementById('btnExcel').click(); return false;" />
                                }
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </form>
            <!-- END: Search Panel -->
        </td>
    </tr>
    <tr>
        <td colspan="3">Total records : @Html.Raw(Model.Count.ToString())
        </td>
    </tr>
    <tr>
        <td colspan="3">
            <div id="tdGrid">
                @{ Html.RenderPartial("ClaimWithDetails", Model); }
            </div>
        </td>
    </tr>
</table>
<script type="text/javascript">
    var LookupURL = '@Defaults.commonRoot/Lookup?id=';
    var dialogPartialURL = '@Url.Content("~/Dashboard/")';

    var brandLookup = "@Html.Raw(brandLookup)";

    // For future manipulation: $('div.pager').children('a').click(function () {@Defaults.chkCollapse }); // Add event to each page link to check & persist collapse search panel
    function callAutoComplete(source, ctrl, IDctrl) {
        renderAutoComplete(LookupURL + source, IDctrl, ctrl);// idBox, txtBox);
    }

    $().ready(function () {
        doCollapse(); //If url has collapse        

        callAutoComplete(brandLookup, "#Brand", "#BrandID");
        //callAutoComplete("ShipLoc", "#ShipToLoc", "#ShipToLocationID");

        callAutoComplete("Customer", "#CustOrg", "#CustID");
        callAutoComplete("User", "#AssignToName", "#AssignedTo");
        callAutoComplete("Salesperson", "#Salesperson", "#SalespersonID");

        createToFromjQDTP("#ClaimDateFrom", "#ClaimDateTo");

        setFocus("ClaimNos");

        callAutoComplete("Item", "#ItemNo", "#ItemID");
        //doItemNoAutoComplete();
    });

    @*function setDTPdateForKO() {
        //Special case for dates handling and prevent JSON data conversion issues
        $("#ClaimDateFrom").val($("#ClaimDateFrom1").val()).trigger("change");
        $("#ClaimDateTo").val($("#ClaimDateTo1").val()).trigger("change");
    }*@

    function resetForm(btn) {
        clearForm(document.getElementById('frm'));
        document.getElementById('doReset').checked = true;
        resetDatepicker('#ClaimDateFrom1, #ClaimDateTo1');
        //trigger changeClaimStatusPost for KO binding notification
        vm_D.search.ClaimNos(null);
        vm_D.search.StatusID(0);
        vm_D.search.AssignToName(null);
        vm_D.search.CustRefNo(null);
        vm_D.search.BrandName(null);
        vm_D.search.CustOrg(null);
        vm_D.search.Salesperson(null);
        vm_D.search.ClaimDateFrom(null);
        vm_D.search.ClaimDateTo(null);
        var hadArchived = vm_D.search.Archived();
        vm_D.search.Archived(false);
        if (hadArchived == true)
            getArchivedData($("#Archived"));
        /*vm_D.quickSearch(null);*/
    }

    function doItemNoAutoComplete() {

        renderAutoComplete('@Defaults.commonRoot/Lookup?id=Item', '#ItemID', '#ItemNo');
        return;


        var url = '@Defaults.commonRoot/Lookup?id=Item1&extras=';// + BrandID; 

        var autoCompMinLen = 2;
        var txtBox = "#ItemNo", idBox = "#ItemID";

        $(txtBox).autocomplete({
            source: url //'@Defaults.commonRoot/Lookup?id=Item1',
                    , minLength: autoCompMinLen
                    , select: function (event, ui) {
                        if (ui.item == null || ui.item.id == null) event.preventDefault();
                        else { setItem(ui.item); }
                    }
                    , focus: function (event, ui) { if (ui.item == null || ui.item.id == null) event.preventDefault(); }
        })//HT: Format the items being displayed Ref: http://jqueryui.com/demos/autocomplete/#custom-data
                    .data("ui-autocomplete")._renderItem = function (ul, item) {
                        return $("<li></li>")
                        //.data("item.autocomplete", item)
				        .append("<a>" + item.value + ((item.descr != null) ? " (" + item.descr + ")</a>" : ""))
				        .appendTo(ul);
                    };

        //Attach onblur event to empty ID field
        $(txtBox).blur(function () { checkReq(txtBox, idBox); });
        //Set initial value (null if it was defaulted to 0) and set tooltip
        var val = $(idBox).val(); $(idBox).val((val == "0") ? "" : val); //"#ItemID"
        $(txtBox).attr('title', 'Start typing to search or type space twice to view all');
    }

</script>
@*<script src="@Url.Content("~/Content/Scripts/KOVM/DashboardKOscript.js")" type="text/javascript" ></script>*@
